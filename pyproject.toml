[tool.poetry]
name = "etl"
version = "0.1.0"
description = ""
authors = ["Our World in Data <tech@ourworldindata.org>"]

[tool.poetry.scripts]
etl = 'etl.command:main_cli'
reindex = 'etl.reindex:reindex_cli'
publish = 'etl.publish:publish_cli'
prune = 'etl.prune:prune_cli'
harmonize = 'etl.harmonize_old:harmonize'
backport = 'apps.backport.backport:backport_cli'
bulk_backport = 'apps.backport.bulk_backport:bulk_backport'
backport-migrate = 'apps.backport.migrate.migrate:cli'
backport-fasttrack = 'apps.backport.fasttrack_backport:cli'
fasttrack = 'apps.fasttrack.cli:cli'
run_python_step = 'etl.run_python_step:main'
compare = 'etl.compare:cli'
generate_graph = 'etl.to_graphviz:to_graphviz'
version_tracker = 'etl.helpers:run_version_tracker_checks'
etl-harmonize = 'etl.harmonize:harmonize'
etl-match-variables = 'etl.match_variables:main_cli'
etl-translate-varmap = 'etl.variable_mapping_translate:main_cli'
etl-chart-suggester = 'etl.chart_revision.cli:main_cli'
etl-metadata-export = 'etl.metadata_export:cli'
etl-metadata-migrate = 'apps.metadata_migrate.cli:cli'
etl-datadiff = 'etl.datadiff:cli'
etl-chartgpt = 'etl.chart_revision.v2.chartgpt:cli'
etl-metaplay = 'apps.metadata_playground.cli:cli'
etl-wizard = 'apps.wizard.cli:cli'
etl-staging-sync = 'apps.staging_sync.cli:cli'
etl-metagpt = 'apps.metagpt.cli:main'

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
owid-catalog = {path = "lib/catalog", develop = true}
walden = {path = "lib/walden", develop = true}
click = ">=8.0.1"
PyYAML = ">=6.0.1"
papermill = ">=2.3.3"
jupyterlab = ">=3.1.13"
# 2.2.0 was raising weird error, pin to 2.1.1 which is stable
mysqlclient = "2.1.1"
SPARQLWrapper = ">=1.8.5"
openpyxl = ">=3.0.9"
sh = "1.14.3"
Unidecode = ">=1.3.2"
python-dotenv = ">=0.19.0"
# we're not yet ready for frictionless 5.x.x as it raises an error for data://open_numbers/open_numbers/latest/bp__energy
frictionless = {version = "^4.40.8", extras = ["pandas"]}
regex = ">=2022.1.18"
wikipedia = ">=1.4.0"
# pandas updates can be dangerous, it is better to pin the version and carefully update it manually
pandas = "1.5.2"
numpy = ">=1.22.1"
pydantic = ">=1.9.0"
structlog = ">=21.5.0"
sqlmodel = "^0.0.6"
rich = ">=12.1.0"
owid-datautils = {path = "lib/datautils", develop = true}
rich-click = ">=1.5.1"
tenacity = ">=8.0.1"
simplejson = ">=3.17.6"
bugsnag = ">=4.2.1"
xlrd = ">=2.0.1"
PyPDF2 = ">=2.11.1"
# DVC 3.0.0 does not allow storing metadata in a different place (we store data in `data/snapshots` and dvc files in `snapshots/*`)
# It doesn't even improve performance and complicates our use case
dvc = {version = ">=2.58.2,<3.0.0", extras = ["s3"]}
"ruamel.yaml" = ">=0.17.21"
owid-repack = {path = "lib/repack", develop = true}
gitpython = "^3.1.30"
rapidfuzz = "^2.13.7"
# pinned because of frictionless, remove this pin when frictionless is updated
fsspec = "2022.11.0"
openai = "^1.3.6"
pdfplumber = "^0.9.0"
pyhumps = "^3.8.0"
wbgapi = "^1.0.12"
odfpy = "^1.4.1"
world-bank-data = "^0.1.3"
questionary = "^2.0.0"
streamlit = "^1.26.0"
streamlit-ace = "^0.1.1"
st-pages = "^0.4.4"
streamlit-extras = "^0.3.0"
typing-extensions = "^4.7.1"
scipy = "^1.11.2"
selenium = "^4.15.1"
geopandas = "^0.14.1"
shapely = "^2.0.2"
fasteners = "^0.19"
streamlit-agraph = "^0.0.45"
cdsapi = "^0.6.1"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.1.2"
watchdog = ">=2.1.5"
PyYAML = ">=5.4.1"
argh = ">=0.26.2"
jupyter = ">=1.0.0"
ipython = ">=7.27.0"
matplotlib = ">=3.4.3"
plotly = ">=5.7.0"
cookiecutter = ">=2.1.1"
types-PyYAML = ">=6.0.12"
hydra-core = ">=1.3.0"
pywebio = ">=1.8.2"
boto3-stubs = { extras = ["s3"], version = ">=1.21.16" }
gspread = "^5.10.0"
# unpinning those would introduce tons of type errors
pyright = "1.1.288"
pandas-stubs = "1.2.0.62"
jsonref = "^1.1.0"
mkdocs-jupyter = "^0.24.2"
mkdocs-exclude = "^1.0.2"
mkdocs-gen-files = "^0.5.0"
ruff = "0.1.6"

[tool.ruff]
extend-select = [
    # isort
    "I"
]
ignore = ["E501"]
line-length = 120
target-version = "py310"
extend-exclude = [
    ".ipynb_checkpoints",
    "*cookiecutter",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
exclude = [
    "lib/",
    "etl/steps/archive",
    "etl/snapshots/archive",
    "apps/wizard/templating/cookiecutter",
    "**/node_modules",
    "**/__pycache__",
    ".git",
    "**/.venv",
    "**/.ipynb_checkpoints",
]
