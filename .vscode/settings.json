{
  "mcp": {
    "servers": {
      "catalog": {
          "type": "stdio",
          "command": ".venv/bin/fastmcp",
          "args": [
              "run",
              "mcp/server.py"
          ],
          "dev": {
            "watch": "mcp/**/*.py",
          }
      }
    }
  },
  "esbonio.sphinx.confDir": "",
  "files.associations": {
    "*.dvc": "yaml"
  },
  "files.trimTrailingWhitespace": true,
  "yaml.schemas": {
    "schemas/snapshot-schema.json": "**/*.dvc",
    "schemas/dataset-schema.json": [
      "**/*.meta.yml",
      "**/*.meta.override.yml"
    ],
    "schemas/multidim-schema.json": "export/multidim/**/*.yml",
    "schemas/explorer-schema.json": "export/explorers/**/*.yml"
  },
  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "flake8.ignorePatterns": [
    "**/*"
  ],
  "pylint.ignorePatterns": [
    "**/*"
  ],
  "grammarly.files.include": [
    "**/README.md",
    "**/readme.md",
    "**/*.txt",
    "**/docs/*.md",
    "**/docs/adding-data/*.md",
    "**/docs/adding-data/*.md",
    "**/docs/getting-started/*.md",
    "**/docs/api/*.md",
    "**/docs/architecture/*.md"
  ],
  "yaml.format.printWidth": 999,
  "ruff.path": [
    ".venv/bin/ruff"
  ],
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "file": ".copilot-commit-message-instructions.md"
    }
  ],
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "file": "CLAUDE.md"
    },
    {
      "file": ".github/instructions/copilot-instructions.md"
    },
    {
      "file": ".github/instructions/garden-metadata.instructions.md"
    },
    {
      "file": ".github/instructions/snapshot-metadata.instructions.md"
    },
  ],
  "files.exclude": {
    "snapshots/backport": true,
  },
  "search.exclude": {
    "snapshots/backport": true,
  },
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "chat.mcp.enabled": true,
  "chat.mcp.discovery.enabled": true,

  // Settings for the "Run Until Cursor" extension
  "runUntilCursor.execDelay": 100,    // Delay before executing code (default: 100ms)
  "runUntilCursor.cursorDelay": 1500   // Delay before moving the cursor into run() (default: 1500ms)
}
